{
	"name": "YearMonthDate_Loop",
	"properties": {
		"activities": [
			{
				"name": "StartDate",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "StartDate",
					"value": {
						"value": "@formatDateTime(startOfMonth(addToTime(utcnow(), -1, 'Month')), 'yyyy-MM-dd')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "EndDate",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "EndDate",
					"value": {
						"value": "@formatDateTime(utcnow(),'yyyy-MM-dd')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Until1",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "StartDate",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "EndDate",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('Date'), replace(variables('EndDate'), '-', ''))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Set Date Variable",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "DateStart",
								"value": {
									"value": "@replace(formatDateTime(adddays(variables('StartDate'),int(variables('Counter'))), 'yyyy-MM-dd'),'-','')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Index Value",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set Date Variable",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "IndexValue",
								"value": {
									"value": "@string(add(int(variables('Counter')),1))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Counter",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set Index Value",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Counter",
								"value": {
									"value": "@variables('IndexValue')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Set Counter",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "Demo/substring(variables('Date'),1,4)/substring(variables('Date'),4,5)/substring(variables('Date'),5,6)",
											"type": "Expression"
										},
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Blob_Demo",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DelimitedText1",
									"type": "DatasetReference"
								}
							]
						}
					],
					"timeout": "7.00:00:00"
				}
			},
			{
				"name": "Set Date",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "Date",
					"value": {
						"value": "@formatDateTime(startOfMonth(addToTime(utcnow(), -1, 'Month')), 'yyyy-MM-dd')",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"StartDate": {
				"type": "String"
			},
			"EndDate": {
				"type": "String"
			},
			"Counter": {
				"type": "String",
				"defaultValue": "1"
			},
			"IndexValue": {
				"type": "String"
			},
			"Date": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2021-06-20T06:31:30Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}